[[plugins]]
repo = 'Shougo/dein.vim'

[[plugins]]
repo = 'leico/autodate.vim'

# line numbers
# ------------
[[plugins]]
repo = 'myusuf3/numbers.vim'
# # feature
# :set number in insert mode
# :set relativenumber in normal mode
 
# format and lint
# ===============
[[plugins]]
repo = 'sbdchd/neoformat'
hook_add = '''
    let g:neoformat_sh_shfmt = {
        \   'exe': 'shfmt',
        \   'args': ['-i', 2, '-ci', '-bn', '-s'],
        \   'stdin': 1,
        \ }

    augroup fmt
        autocmd!
        autocmd FileType sh,zsh autocmd BufWritePre <buffer> undojoin | Neoformat
    augroup END
'''

[[plugins]]
repo = 'neoclide/coc.nvim'
build = './install.sh nightly'
hook_add = 'source ~/.config/nvim/coc.vim'


[[plugins]] # IDE
repo = 'liuchengxu/vista.vim'
depends = ['coc.nvim', 'lightline.vim']
hook_add = '''
    nmap <silent> <C-f><C-v> :<C-u>Vista coc<CR>
    nmap <silent> <C-f><C-s> :<C-u>Vista finder coc<CR>
'''


# file
# ====
[[plugins]]
repo = 'scrooloose/nerdtree'
hook_add = '''
noremap ,t :NERDTreeToggle<CR>
'''

[[plugins]]
repo = 'Shougo/unite.vim'
hook_add = '''
    let g:unite_enable_start_insert=1
    let g:unite_source_history_yank_enable =1
    let g:unite_source_file_mru_limit = 200
    nnoremap <silent> ,uy :<C-u>Unite history/yank<CR>
    nnoremap <silent> ,ub :<C-u>Unite buffer<CR>
    nnoremap <silent> ,uf :<C-u>UniteWithBufferDir -buffer-name=files file<CR>
    nnoremap <silent> ,ur :<C-u>Unite -buffer-name=register register<CR>
    nnoremap <silent> ,uu :<C-u>Unite file_mru buffer<CR>
'''



# detect filetype
# ===============
[[plugins]]
repo = 'sbdchd/vim-shebang'

# [[plugins]]
# repo = 'osyo-manga/vim-precious'
# depends = ['context_filetype.vim']

[[plugins]]
repo = 'Shougo/context_filetype.vim'

# syntax
# ======
[[plugins]] # toml
repo = 'cespare/vim-toml'

[[plugins]] # typescript
repo = 'leafgarland/typescript-vim'

[[plugins]] # vue
repo = 'posva/vim-vue'

# Markdown
# --------
[[plugins]]
repo = 'plasticboy/vim-markdown'
depends = 'godlygeek/tabular'
hook_add = '''
" 折りたたみの禁止
let g:vim_markdown_folding_disabled = 1
let g:vim_markdown_auto_insert_bullets = 0
let g:vim_markdown_new_list_item_indent = 0
'''

# [[plugins]]
# repo = 'godlygeek/tabular'

# enhance
# =======
[[plugins]] # status bar
repo = 'itchyny/lightline.vim'
hook_add = '''
let g:lightline = {
      \ 'colorscheme': 'landscape',
      \ 'active': {
      \   'left': [ [ 'mode', 'paste' ],
      \             [ 'gitbranch', 'readonly', 'filename', 'modified' ],
      \             [ 'vista' ],
      \           ]
      \ },
      \ 'component_function': {
      \   'gitbranch': 'fugitive#head',
      \   'vista': 'NearestMethodOrFunction',
      \ },
      \ }
function! NearestMethodOrFunction() abort
  return get(b:, 'vista_nearest_method_or_function', '')
endfunction
'''


# complement
# ==========
[[plugins]]
repo = 'kana/vim-smartinput'

[[plugins]] # helper for paren complement
repo = 'Townk/vim-autoclose'


[[plugins]]
repo = 'scrooloose/nerdcommenter'
hook_add = '''
autocmd BufNewFile,BufRead *.pest setfiletype pest
let g:NERDCustomDelimiters = { 'pest': { 'left': '//' } }
let g:NERDCustomDelimiters = { 'ahk': { 'left': '//' } }

let g:NERDSpaceDelims=1
let g:NERDDefaultAlign='left'
noremap ,, :call NERDComment("n", "Uncomment")<CR>
noremap .. :call NERDComment("n", "Comment")<CR>
noremap .A :call NERDComment("n", "Append")<CR>
'''


# color scheme
# ============
[[plugins]]
repo = 'cocopon/iceberg.vim'
depends = 'cocopon/pgmnt.vim'
hook_source = '''
syntax on
colorscheme iceberg
'''

[[plugins]]
repo = 'cocopon/pgmnt.vim'

# lang
# ====
[[plugins]]
repo = 'lazywei/vim-matlab'

