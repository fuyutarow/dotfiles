[tasks.add-brew]
script = [
'''
git clone https://github.com/Homebrew/brew ~/.linuxbrew/Homebrew
mkdir ~/.linuxbrew/bin
ln -s ../Homebrew/bin/brew ~/.linuxbrew/bin
echo ~/.linuxbrew
'''
]

[tasks.up-brew]
script = [
'''
brew update
brew upgrade
brew cleanup
'''
]

[tasks.add-zsh]
script = [
'''
brew install zsh

: ### install zplugin
sh -c "$(curl -fsSL https://raw.githubusercontent.com/zdharma/zplugin/master/doc/install.sh)"
brew install svn ;: for zplugin
sudo chsh -s "$(command -v zsh)" "${USER}"
'''
]

[tasks.add-vim]
script = [
'''
brew install neovim
bash setup.d/dein.sh
nvim +":call dein#install()" +qa
'''
]

[tasks.add-coc]
script = [
'''
vi +":CocInstall coc-rls" +qa ;: Rust
vi +":CocInstall coc-python" +qa
vi +":CocInstall coc-tsserver" +qa ;: TypeScript
vi +":CocInstall coc-html" +qa
vi +":CocInstall coc-css" +qa
vi +":CocInstall coc-yaml" +qa
vi +":CocInstall coc-vetur" +qa ;: Vue
vi +":CocInstall coc-solargraph" +qa ;: Ruby
vi +":CocInstall coc-emoji" +qa ;: for Markdown file only
'''
]

[tasks.add-dev]
script = [
'''
eval $(~/.linuxbrew/bin/brew shellenv)
brew update
brew install git
brew install exa ;: alternative for `ls`
brew install sl ;: alternative for `ls`
brew install fuyutarow/commad/commad ;: alternative for `cd`
brew install lolcat ;: alternative for `cat`
brew install colordiff ;: alternative for `diff`
brew install translate-shell ;: `trans`
'''
]

[tasks.add-node]
script = [
'''
curl -L git.io/nodebrew | perl - setup
# export PATH=$HOME/.nodebrew/current/bin:$PATH
nodebrew install latest
nodebrew use latest
echo ~/.env.d/node.sh
'''
]

[tasks.add-nodeapp]
script = [
'''
npm install -g yarn
npm install -g ts-node typescript
npm i -g fast-cli
'''
]

[tasks.add-python]
script = [
'''
brew install pyenv poetry pipx
poetry completions zsh > ~/.zfunc/_poetry
echo ~/.env.d/python.sh
'''
]

[tasks.add-pythonapp]
script = [
'''
pipx install sshuttle
pipx install jupyter-core notebook
'''
]

[tasks.add-python-mac]
script = [
'''
brew install pyenv
curl -sSL https://raw.githubusercontent.com/sdispater/poetry/master/get-poetry.py | python
poetry completions zsh > ~/.zfunc/_poetry
'''
]

[tasks.add-python-linux]
script = [
'''
curl https://pyenv.run | bash
curl -sSL https://raw.githubusercontent.com/sdispater/poetry/master/get-poetry.py | python
poetry completions zsh > ~/.zfunc/_poetry
'''
]

[tasks.up-rust]
script = [
'''
rustup update
rustup component add rls rust-analysis rust-src ;: LPS
rustup component add clippy
cargo install cargo-edit ;: subcommand `add`, `rm`, `upgrade`
cargo install --force cargo-make
'''
]

[tasks.link-wsl]
script = [
'''
ln -svf /mnt/c/Users/fuyutarow/Desktop/ ~
ln -svf /mnt/c/Users/fuyutarow/Downloads/ ~
ln -svf /mnt/c/Users/fuyutarow/Gdrive/ ~
mkdir -p ~/.ssh
ln -svf /mnt/c/Users/fuyutarow/Gdrive/ssh/common/config ~/.ssh/config
ln -svf /mnt/c/Users/fuyutarow/Gdrive/ssh/common/config.d/ ~/.ssh/config.d
'''
]

[tasks.add-scoop]
script_runner = "powershell.exe"
# script_extension = "ps1"
script = [
'''
Invoke-Expression (New-Object System.Net.WebClient).DownloadString('https://get.scoop.sh')
scoop bucket add extras
'''
]

[tasks.add-winapp-scoop]
script_runner = "powershell.exe"
script_extension = "ps1"
script = [
'''
scoop install chromium vivaldi opera autohotkey discord terminus
'''
]

[tasks.add-winapp]
dependencies = ["add-winapp-scoop"]
script = [
'''
open https://www.google.com/drive/download/backup-and-sync/
open https://www.autohotkey.com
'''
]

[tasks.add-vscode]
script_runner = "powershell.exe"
script_extension = "ps1"
script = [
'''
scoop install vscode
'''
]

[tasks.add-julia]
script = [
'''
wget https://julialang-s3.julialang.org/bin/linux/x64/1.3/julia-1.3.0-linux-x86_64.tar.gz -O julia.tar.gz
mkdir -p ~/.julia
tar zxvf julia.tar.gz -C ~/.julia --strip-components 1
julia -e 'import Pkg; Pkg.add("jlpkg")'
julia -e 'import jlpkg; jlpkg.install()'
echo ~/.env.d/julia.sh
'''
]
